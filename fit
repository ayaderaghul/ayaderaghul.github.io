
#survival of the fittest

directly compare the fitness mechanism with the round robin mechanism before
any example would require to get replicator dynamics theoretically on the table.
together they would be a big mess of theory. let's do example first.

(i was on the internet the other day, and i saw a picture of grenades and caption:
"strong arguments". i nearly had existential crisis that evening "omg all of my
arguments that i thought strong were not even close to this much strong")

anyway, let's do iterated prisoner's dilemma.

the prisoner dilemma one-shot is symmetric and dominant solvable.
the replicator dynamics points to one corner (D,D).

*[skip explaining why]*

*[skip the part of theoretical replicator dynamics]*

##simulation settings
there is a world of 100 slots. we fill this world with agents ->
the population is N = 100 agents. they play different machines.
the good thing about deterministic machines is that there are only 32 of them
so we can cover the whole set. ([why?](https://ayaderaghul.github.io/mass.html)).

machines play conditional on the previous rounds outcome.

initially, the population is created randomly. we match 100 agents into
50 pairs to play the PD for r = 200 rounds. then we sum the payoffs.
there are two ways to sum:
- just sum (arithmatically)
- use the discount rate to calculate present value of the payoff stream

after suming, each agent has a number of fitness. the whole population has a fitness
vector.

now we kill 5% of the population (randomly). equivalently, we say, we let 5% of the
agents to change their machine.

we rebirth this 5% by randomising over the fitness vector of the
whole old population.

now we let 1% mutate (randomising uniformly in the entire machine set)

shuffle the population, ready for the next cycle.

please read van Veelen support file for colorful demonstration.

##run

